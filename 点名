import MySQLdb
# import MySQLdb.conn
from tkinter import *
from tkinter import messagebox
import tkinter
import tkinter.messagebox
import random
import threading
import itertools
import time


class MysqlSearch(object):
    def __init__(self):
        self.get_conn()

    # 获取连接
    def get_conn(self):
        try:
            self.conn = MySQLdb.connect(
                host='localhost',
                port=3306,
                user='root',
                passwd='root',
                db='work',
                charset='utf8'
            )
        except MySQLdb.Error as e:
            print('Error: %s' % e)

    # 关闭连接
    def close_conn(self):
        try:
            if self.conn:
                self.conn.close()
        except MySQLdb.Error as e:
            print('Error: %s' % e)

    def sign_in(self, a, b):
        self.a = a
        self.b = b
        sql = 'SELECT * FROM 签到系统'
        cursor = self.conn.cursor()
        cursor.execute(sql)
        result = cursor.fetchall()
        result = [dict(zip([k[0] for k in cursor.description], row)) for row in result]
        nlist = []
        for item in result:
            nlist.append(item['姓名'])
        try:
        # sql = 'INSERT INTO 登陆账户(用户名,密码) VALUES(%s,%s)'
            cursor = self.conn.cursor()
            cursor.execute('INSERT INTO 签到系统(姓名,学号) VALUES(%s,%s)', (self.a, self.b))
            self.conn.commit()

            messagebox.showinfo(title='恭喜', message='签到成功')
            cursor.close()
            self.close_conn()
        except:
        # 限制提交
            self.conn.rollback()

def register():
    register_name = entry_name.get()
    register_number = entry_number.get()
    obj_r = MysqlSearch()
    obj_r.sign_in(register_name, register_number)

win_login = Tk()
win_login.title('签到系统')

    # 禁止拉伸窗口
win_login.resizable(width=False, height=False)
win_login.geometry('600x300+382+183')

    # 在窗口上创建标签组件
Label(win_login, text='姓名', font=('微软雅黑'), justify=RIGHT, width=80).place(x=190, y=50, width=80, height=40)
Label(win_login, text='学号', font=('微软雅黑'), justify=RIGHT, width=80).place(x=190, y=100, width=80, height=40)

    # 创建字符串变量和文本框组件，同时设置关联的变量
    # 姓名
name = StringVar(win_login, value='')
entry_name = Entry(win_login, width=80, textvariable=name)
entry_name.place(x=310, y=50, width=80, height=40)

    # 学号
number = StringVar(win_login, value='')
entry_number = Entry(win_login, show='*', width=80, textvariable=number)
entry_number.place(x=310, y=100, width=80, height=40)

    # 按钮
Button(win_login, text='签到', font=('微软雅黑'), command=register).place(x=150, y=150, width=80, height=50)


    # 启动消息循环
win_login.mainloop()


def closeWindow():
    root.flag = False
    time.sleep(0.1)  # 延迟0.1秒执行
    root.destroy()


def clickStart():
    t = threading.Thread(target=shuffleUsers)
    t.start()
    btnStart['state'] = 'disabled'
    btnStop['state'] = 'normal'


def clickStop():
    global times
    root.flag = False  # 暂停线程
    time.sleep(0.1)
    times += 1
    tkinter.messagebox.showinfo(title="Congratulations!", message=str(times) + ": " + showLabel['text'])
    btnStart['state'] = 'normal'
    btnStop['state'] = 'disabled'


def shuffleUsers():  # 开始洗牌线程
    root.flag = True
    t = users[:]
    random.shuffle(t)
    t = itertools.cycle(t)
    while root.flag:
        showLabel['text'] = next(t)
        time.sleep(0.1)


root = tkinter.Tk()
root.title("Name Shuffle")
root.geometry("400x400+480+200")
root.resizable(False, False)

root.flag = False  # 线程状态
times = 0
conn = MySQLdb.connect(host='localhost',port=3306,user='root',passwd='root',db='work',charset='utf8')
cursor = conn.cursor()
cursor.execute('select * from user where id = %s', ('1',))
values = cursor.fetchall()
users =values
btnStart = tkinter.Button(root, text='Start', command=clickStart)
btnStart.place(x=30, y=10, width=80, height=20)

btnStop = tkinter.Button(root, text='Stop', command=clickStop)
btnStop['state'] = 'disabled'
btnStop.place(x=300, y=10, width=80, height=20)

showLabel = tkinter.Label(root, text='')
showLabel['fg'] = 'red'
showLabel.place(x=150, y=180, width=100, height=20)

root.protocol("WM_DELETE_WINDOW", closeWindow)
root.mainloop()
